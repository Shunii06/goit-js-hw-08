{"mappings":"ACAA,SAAS,gBAAgB,CAAC,mBAAoB,KAC5C,IAAM,EAAS,SAAS,cAAc,CAAC,gBACjC,EAAS,IAAI,MAAM,MAAM,CAAC,GAgB1B,EAA2B,SAdT,IACf,EACJ,cAAc,GACd,IAAI,CAAC,AAAA,IACJ,aAAa,OAAO,CAClB,2BACA,KAAK,SAAS,CAAC,GAEnB,GACC,KAAK,CAAC,AAAA,IACL,QAAQ,KAAK,CAAC,qBAAsB,EACtC,GAGuD,KAE3D,EAAO,EAAE,CAAC,aAAc,GAkBxB,AAhB+B,CAAA,KAC7B,IAAM,EAAa,aAAa,OAAO,CAAC,4BACxC,GAAI,EAAY,CACd,IAAM,EAAc,KAAK,KAAK,CAAC,GAC/B,OAAO,EACJ,cAAc,CAAC,GACf,IAAI,CAAC,KAEN,GACC,KAAK,CAAC,AAAA,IACL,QAAQ,KAAK,CAAC,qBAAsB,EACtC,EACJ,CACA,OAAO,QAAQ,OAAO,EACxB,CAAA,GAGF","sources":["<anon>","src/js/02-video.js"],"sourcesContent":["var $c006019e0678fe87$exports = {};\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const iframe = document.getElementById(\"vimeo-player\");\n    const player = new Vimeo.Player(iframe);\n    const saveCurrentTime = ()=>{\n        return player.getCurrentTime().then((currentTime)=>{\n            localStorage.setItem(\"videoplayer-current-time\", JSON.stringify(currentTime));\n        }).catch((error)=>{\n            console.error(\"An error occurred:\", error);\n        });\n    };\n    const throttledSaveCurrentTime = throttle(saveCurrentTime, 1000);\n    player.on(\"timeupdate\", throttledSaveCurrentTime);\n    const setPlaybackFromStorage = ()=>{\n        const storedTime = localStorage.getItem(\"videoplayer-current-time\");\n        if (storedTime) {\n            const currentTime = JSON.parse(storedTime);\n            return player.setCurrentTime(currentTime).then(()=>{\n            // Dodaj obsługę powodzenia, jeśli to konieczne\n            }).catch((error)=>{\n                console.error(\"An error occurred:\", error);\n            });\n        }\n        return Promise.resolve();\n    };\n    setPlaybackFromStorage();\n}); //\n /*\nimport Vimeo from '@vimeo/player';\nimport throttle from 'lodash.throttle';\n\nconst player = new Vimeo.Player(document.getElementById('vimeo-player'));\n\nconst saveCurrentTime = throttle(() => {\n  return player\n    .getCurrentTime()\n    .then(currentTime => {\n      localStorage.setItem(\n        'videoplayer-current-time',\n        JSON.stringify(currentTime)\n      );\n      return { success: true, currentTime };\n    })\n    .catch(error => {\n      console.error('An error occurred:', error);\n      return { success: false, error };\n    });\n}, 1000);\n\nplayer.on('timeupdate', () => {\n  saveCurrentTime().then(({ success, currentTime, error }) => {});\n});\n\nconst setPlaybackFromStorage = () => {\n  const storedTime = localStorage.getItem('videoplayer-current-time');\n  return storedTime\n    ? player\n        .setCurrentTime(JSON.parse(storedTime))\n        .then(() => ({ success: true, currentTime: JSON.parse(storedTime) }))\n        .catch(error => ({ success: false, error }))\n    : Promise.resolve({ success: true });\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  setPlaybackFromStorage().then(({ success, currentTime, error }) => {});\n});\n*/ \n\n\n//# sourceMappingURL=02-video.a55e4365.js.map\n","document.addEventListener('DOMContentLoaded', () => {\n  const iframe = document.getElementById('vimeo-player');\n  const player = new Vimeo.Player(iframe);\n\n  const saveCurrentTime = () => {\n    return player\n      .getCurrentTime()\n      .then(currentTime => {\n        localStorage.setItem(\n          'videoplayer-current-time',\n          JSON.stringify(currentTime)\n        );\n      })\n      .catch(error => {\n        console.error('An error occurred:', error);\n      });\n  };\n\n  const throttledSaveCurrentTime = throttle(saveCurrentTime, 1000);\n\n  player.on('timeupdate', throttledSaveCurrentTime);\n\n  const setPlaybackFromStorage = () => {\n    const storedTime = localStorage.getItem('videoplayer-current-time');\n    if (storedTime) {\n      const currentTime = JSON.parse(storedTime);\n      return player\n        .setCurrentTime(currentTime)\n        .then(() => {\n          // Dodaj obsługę powodzenia, jeśli to konieczne\n        })\n        .catch(error => {\n          console.error('An error occurred:', error);\n        });\n    }\n    return Promise.resolve();\n  };\n\n  setPlaybackFromStorage();\n});\n//\n/*\nimport Vimeo from '@vimeo/player';\nimport throttle from 'lodash.throttle';\n\nconst player = new Vimeo.Player(document.getElementById('vimeo-player'));\n\nconst saveCurrentTime = throttle(() => {\n  return player\n    .getCurrentTime()\n    .then(currentTime => {\n      localStorage.setItem(\n        'videoplayer-current-time',\n        JSON.stringify(currentTime)\n      );\n      return { success: true, currentTime };\n    })\n    .catch(error => {\n      console.error('An error occurred:', error);\n      return { success: false, error };\n    });\n}, 1000);\n\nplayer.on('timeupdate', () => {\n  saveCurrentTime().then(({ success, currentTime, error }) => {});\n});\n\nconst setPlaybackFromStorage = () => {\n  const storedTime = localStorage.getItem('videoplayer-current-time');\n  return storedTime\n    ? player\n        .setCurrentTime(JSON.parse(storedTime))\n        .then(() => ({ success: true, currentTime: JSON.parse(storedTime) }))\n        .catch(error => ({ success: false, error }))\n    : Promise.resolve({ success: true });\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  setPlaybackFromStorage().then(({ success, currentTime, error }) => {});\n});\n*/\n"],"names":["document","addEventListener","iframe","getElementById","player","Vimeo","Player","throttledSaveCurrentTime","throttle","getCurrentTime","then","currentTime","localStorage","setItem","JSON","stringify","catch","error","console","on","setPlaybackFromStorage","storedTime","getItem","parse","setCurrentTime","Promise","resolve"],"version":3,"file":"02-video.a55e4365.js.map"}